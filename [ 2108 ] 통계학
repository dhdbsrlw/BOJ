#include <stdio.h>
#include <stdlib.h>
#pragma warning(disable:4996)

//산술평균 구하는 함수
double avg(int sum, int n) { 

	double result;
	result = (double)sum / n;

	return result;
}


//큌정렬에 필요한 함수
int compare(const void* first, const void* second) {

	int* a = (int*)first;
	int* b = (int*)second;

	if (*a < *b) 
		return -1;
	else if (*a > *b) 
		return 1;
	else 
		return 0;
}


//중간값 구하는 함수
int median(int arr[], int n) {

	if (n == 1)
		return arr[0];

	else
		return arr[(n + 1) / 2 - 1]; //반올림 주의
}


//최빈값을 구하는 함수
int mode(int arr[], int n) {

	int cnt[8001] = { 0, }; //횟수
	int cntM = 0;
	int turn = 0;
	int result; //최빈값

	for (int i = 0; i < n; i++) {
		cnt[arr[i] + 4000]++;
		
		if (cnt[arr[i] + 4000] > cntM) {
			cntM = cnt[arr[i] + 4000];
			result = arr[i];
		}
	}


	for (int i = 0; i < 8000; i++) {

		if (cnt[i] == 0) continue;

		if (cnt[i] == cntM) {

			turn++;

			if (turn == 2)
				result = i - 4000;
		}
	
	}
	
	return result;
}

//범위 구하는 함수
int range(int arr[], int n) {

	int max = arr[n - 1];
	int min = arr[0];

	return max - min;
}


int main(void) {

	int N;
	int arr[500000] = { 0, };
	int sum = 0;

	scanf("%d", &N);

	for (int i = 0; i < N; i++) {
		scanf("%d", &arr[i]);
		sum += arr[i];
	}

	//퀵정렬
	qsort(arr, N, sizeof(arr[0]), compare);

	printf("%.0lf\n", avg(sum, N));
	printf("%d\n", median(arr,N));
	printf("%d\n", mode(arr, N)); 
	printf("%d\n", range(arr, N));

	return 0;
}
