#include <stdio.h>
#include <stdlib.h>
#pragma warning(disable:4996)


//큌정렬에 필요한 함수
int compare(const void* first, const void* second) {

	int* a = (int*)first;
	int* b = (int*)second;

	if (*a < *b)
		return -1;
	else if (*a > *b)
		return 1;
	else
		return 0;
}


//이진탐색
int binarySearch(int arr[], int pivot, int size) {

	int start = 0;
	int end = size - 1;

	while (1) {

		int mid = (start + end) / 2;

		if (pivot == arr[start]) return 1;
		if (pivot == arr[end]) return 1;
		if (pivot == arr[mid]) return 1;
	
		
		if (pivot < arr[mid])
			end = mid - 1;
		else
			start = mid + 1;

		if (end <= start)
			return 0;

	}
}


int main() {

	int* arr1 = NULL;
	int* arr2 = NULL;
	int N;
	int M;

	scanf("%d", &N);
	arr1 = (int*)malloc(sizeof(int) * N);
	for (int i = 0; i < N; i++) 
		scanf("%d", &arr1[i]);


	scanf("%d", &M);
	arr2 = (int*)malloc(sizeof(int) * M);
	for (int i = 0; i < M; i++)
		scanf("%d", &arr2[i]);
	

	qsort(arr1, N, sizeof(int), compare);
	
	for (int i = 0; i < M; i++) 
		printf("%d\n", binarySearch(arr1, arr2[i], N));
	
	free(arr1);
	free(arr2);

	return 0;
}
